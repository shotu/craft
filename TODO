Multiuser snake and ladder game: rest apis
services developed should be able to scale horizonatally 
deploy on kubernetes and optimize based on load [autoscale services based on load]



REST APIs list

// create new game 
   initialize the game and store in db, refer by id created by, 
   ladders[start, end], snakes:[start, end]

get board by id: 

// join the game / 
// add people to game 
  [playerid, gameId]
  [playerid, gameId]
  [playerid, gameId]


initialize player:
  assign the initial place 


roll the dice, 
   based on output-> 
   move the player to new postion, if new postion has snake or ladder, go to that postion, 

if any move reaches the 100 declare the winner: 






ROLL DICE :
roll dice, 
    add to players curr pos ,
    final postion: check if snake or ladder till there is none on 100, if not hundered return else return win, 
    return updated board, and also return the happened event summary summary: 



deployment:

https://www.callicoder.com/deploy-containerized-go-app-kubernetes/
https://searchitoperations.techtarget.com/tutorial/How-to-auto-scale-Kubernetes-pods-for-microservices

docker build -t go-kubernetes .

docker tag go-kubernetes atri/go-craft:1.0.0
docker push atri/go-craft:1.0.0

kubectl apply -f deployments/

kubectl port-forward svc/microsvc 8080:8080


kubectl autoscale deployment microsvc --cpu-percent=50 --min=1 --max=4

kubectl run -i --tty load-generator --rm --image=busybox --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://microsvc/; done"
